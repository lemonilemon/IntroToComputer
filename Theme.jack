class Theme {
    field int curPos;
    field Castle DogCastle, BadDogCastle;
    field LinkedList Dogs, BadDogs; 
    constructor Theme new() {
        let Dogs = LinkedList.new(); // Number of dogs
        let BadDogs = LinkedList.new();
        return this;
    }
    method int getTargetDog() {
        var int targetDogIdx;
        var int idx;
        var int leftwall;
        var Dog cur;
        var Element it; // iterator
        let leftwall = 60; // dogcastle 
        let it = Dogs.getFront(); 
        let idx = 0;
        while(~(it = null)) {
            let cur = it.getData();
            if(cur.Location() + 60 > leftwall) {
                let leftwall = cur.Location() + 60;
                let targetDogIdx = idx;
            }
            let idx = idx + 1;
            let it = it.getNext(); 
        } 
        /** Set wall */
        do Dog.Change_leftWall(leftwall);
        return targetDogIdx;
    }
    method int getTargetBadDog() {
        var int targetBadDogIdx;
        var int idx;
        var int rightwall;
        var Dog cur;
        var Element it;
        let rightwall = 300; // baddogcastle
        let it = BadDogs.getFront(); 
        let idx = 0;
        while(~(it = null)) {
            let cur = it.getData();
            if(cur.Location() - 60 < rightwall) {
                let rightwall = cur.Location() - 60;
                let targetBadDogIdx = idx;
            }
            let idx = idx + 1;
            let it = it.getNext(); 
        }
        /** Set wall */
        do Dog.Change_rightWall(rightwall);
        return targetBadDogIdx;
    }
    method void run() {     
        var Element it;
        var Dog cur;
        var Dog targetDog, targetBadDog;
        var int targetDogIdx, targetBadDogIdx;
        var int damage;
        do Dog.Change_y(150);
        do Dogs.push(Dog.new(60, 10, 10, 5, 1));
        do BadDogs.push(Dog.new(250, 10, 10, 10, -1));
        let DogCastle = Castle.new(50, 100, 100);
        let BadDogCastle = Castle.new(300, 100, 100);
        while(true) {
            do Sys.wait(50);

            /** Find right most dog */
            let targetDogIdx = getTargetDog();   
            let targetDog = Dogs.getElement(targetDogIdx);

            /** Find left most baddog */
            let targetBadDogIdx = getTargetBadDog(); 
            let targetBadDog = BadDogs.getElement(targetBadDogIdx);

            //** Start rendering */
            do Screen.clearScreen();
 
            /** Dog Action */
            let it = Dogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                let damage = cur.act();
                if(damage > 0) {
                    if(targetBadDog = null) {
                        if(BadDogCastle.damage(damage)) {
                            do Screen.clearScreen();
                            do Output.printString("You win!");
                            do Sys.halt();    
                        }
                    } 
                    else {
                        if(targetBadDog.TakeAnyDamage(damage)) {
                            do BadDogs.pop(targetBadDogIdx);  
                            let targetBadDogIdx = getTargetBadDog();   
                            let targetBadDog = BadDogs.getElement(targetBadDogIdx);
                        }
                    }
                }
                let it = it.getNext();
            }
            let it = BadDogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                let damage = cur.act(); 
                if(damage > 0) {
                    if(targetDog = null) { 
                        if(DogCastle.damage(damage)) {
                            do Screen.clearScreen();
                            do Output.printString("You lose!");
                            do Sys.halt();    
                        }
                    } 
                    else {
                        if(targetDog.TakeAnyDamage(damage)) {
                            do Dogs.pop(targetDogIdx); 
                            let targetDogIdx = getTargetDog();   
                            let targetDog = Dogs.getElement(targetDogIdx);
                        } 
                    }
                }
                let it = it.getNext();
            }

            /** Check whether the dog is dead */



            /** Draw Dogs */
            let it = Dogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                do cur.show();
                let it = it.getNext();
            }
            let it = BadDogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                do cur.show();
                let it = it.getNext();
            }
            /** Check if the game end */

            /** Draw blood */
            do DogCastle.draw();
            do BadDogCastle.draw();
        } 
        return;
    }
}
