class Theme {
    field int curPos;
    field Castle DogCastle, BadDogCastle;
    field LinkedList Dogs, BadDogs; 
    constructor Theme new() {
        let Dogs = LinkedList.new(); // Number of dogs
        let BadDogs = LinkedList.new();
        return this;
    }
    method void run() {     
        var Element it;
        var Dog cur;
        var int leftwall, rightwall;
        var int damage;
        var int idx;
        var int dogidx, baddogidx;
        do Dog.Change_y(150);
        do Dogs.push(Dog.new(10, 10, 10, 5, 1));
        // do BadDogs.push(Dog.new(100, 10, 10, 10, -1));
        // let DogCastle = Castle.new(100, 100, 100);
        let BadDogCastle = Castle.new(100, 100, 100);
        while(true) {
            do Sys.wait(50);
            /** Find right most dog */
            let leftwall = 60; // dogcastle
            let dogidx = -1;
            let idx = 0;
            let it = Dogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                if(cur.Location() + 60 > leftwall) {
                    let leftwall = cur.Location() + 60;
                    let dogidx = idx;
                }
                let idx = idx + 1;
                let it = it.getNext(); 
            }
            /** Find left most baddog */
            let rightwall = 50; // baddogcastle
            let baddogidx = -1;
            let idx = 0;
            let it = BadDogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                if(cur.Location() - 60 < rightwall) {
                    let rightwall = cur.Location() - 60;
                    let baddogidx = idx;
                }
                let idx = idx + 1;
                let it = it.getNext(); 
            }

            //** Start rendering */
            do Screen.clearScreen();

            /** Set wall */
            do Dog.Change_leftWall(leftwall);
            do Dog.Change_rightWall(rightwall);
            
            /** Dog Action */
            let it = Dogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                let damage = cur.act();
                if(baddogidx = -1) {
                    do BadDogCastle.damage(damage);
                } 
                else {

                }
                let it = it.getNext();
            }
            let it = BadDogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                let damage = cur.act(); 
                if(dogidx = -1) { 
                    do DogCastle.damage(damage);
                } 
                else {
                    
                }
                let it = it.getNext();
            }

            /** Check whether the dog is dead */



            /** Draw Dogs */
            let it = Dogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                do cur.show();
                let it = it.getNext();
            }
            let it = BadDogs.getFront(); 
            while(~(it = null)) {
                let cur = it.getData();
                do cur.show();
                let it = it.getNext();
            }
            /** Check if the game end */

            /** Draw blood */
            // do DogCastle.drawblood();
            do BadDogCastle.drawblood();
        } 
        return;
    }
}
