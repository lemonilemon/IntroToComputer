class Dog {
    field int x; //the dog's screen location
    static int y;
    field int HP;
    field int ATK;
    field int speed;
    static int rightWall;
    field int count;
    field int direction; // 1 or -1
    field int atkcount;
    field int atkspeed;
    static int leftWall;
    field boolean die;

    constructor Dog new(int type, boolean friend) { // 0-based
        if(friend) {
            let x = 50; 
            let direction = 1;
        }
        else {
            let x = 400;
            let direction = -1;
        }
        if(type = 0) { 
            let HP = 200;
            let ATK = 10;
            let atkspeed = 10;
        }
        if(type = 1) {
            let HP = 500;
            let ATK = 50;
            let atkspeed = 20;
        }
        let count = 0;
        let atkcount =0;
        return this;
    }

    /** Deallocates the Dog's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Show the Dog. */
    method void show() {
        do Screen.setColor(true); 
        do Screen.drawRectangle(x , y, x + 50, y + 50);
        return;
    }

    method int act() {
        if(direction = 1) {
            if(x = rightWall) {
                return attack();
            }
            else {
                do move();
                return 0;
            }
        }        
        else {
            if(x = leftWall) {
                return attack();
            }
            else {
                do move();
                return 0;
            }
        } 
    } 
    method void move() {
        var int mod;
        let mod = count - ((count / 2)*2);
        if(mod = 0) {
            let x = x + direction;
            let count = 0;
        }
        let count = count + 1;
        return;
    }

    /** Let Dog Attack */
    method int attack() {
        let atkcount = atkcount +1;
        if(atkcount = atkspeed) {
            let atkcount = 0;
            return ATK;
        } 
        return 0;
    }
    
    method boolean TakeAnyDamage(int damage) {
        let HP = HP - damage;
        if(HP < 1) {
            return true;
        }
        return false;
    }

    method int Location() {
        return x;
    }

    function void Change_y(int val) {
        let y = val;
        return;
    }
    function void Change_leftWall(int val) {
        let leftWall = val;
        return;
    }
    function void Change_rightWall(int val) {
        let rightWall = val;
        return;
    }



}
