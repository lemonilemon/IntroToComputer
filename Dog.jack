class Dog {
    field int x; //the dog's screen location
    static int y;
    field int HP;
    field int ATK;
    field int movespeed;
    field int range;
    static int rightWall;
    field int movecount;
    field int direction; // 1 or -1
    field int atkcount;
    field int atkspeed;
    field int dogtype;
    static int leftWall;
    field boolean die;

    constructor Dog new(int type, boolean friend) { // 0-based
        if(friend) {
            let x = 40; 
            let direction = 1;
        }
        else {
            let x = 470;
            let direction = -1;
        }
        let dogtype = type + 1;
        if(dogtype = 1) { 
            let HP = 200;
            let ATK = 10;
            let atkspeed = 10;
        }
        if(dogtype = 2) {
            let HP = 500;
            let ATK = 50;
            let atkspeed = 20;
        }
        let movespeed = 1;
        let range = 50;
        let movecount = 0;
        let atkcount = 0;
        return this;
    }

    /** Deallocates the Dog's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Show the Dog. */
    method void show() {
        do Display.dog(direction * dogtype, Math.divide(atkcount, Math.divide(atkspeed, 3)), x, y);
        return;
    }

    method int act() {
        if(direction = 1) {
            if(x + range > rightWall) {
                return attack();
            }
            else {
                do move();
                return 0;
            }
        }        
        else {
            if(x - range < leftWall) {
                return attack();
            }
            else {
                do move();
                return 0;
            }
        } 
    } 

    method void move() {
        let atkcount = 0;
        let movecount = movecount + 1;
        if(movecount = movespeed) {
            let x = x + direction;
            let movecount = 0;
        }
        return;
    }

    /** Let Dog Attack */
    method int attack() {
        let movecount = 0;
        let atkcount = atkcount +1;
        if(atkcount = atkspeed) {
            let atkcount = 0;
            return ATK;
        } 
        return 0;
    }
    
    method boolean TakeAnyDamage(int damage) {
        let HP = HP - damage;
        if(HP < 1) {
            return true;
        }
        return false;
    }

    method int Location() {
        return x;
    }

    function void Change_y(int val) {
        let y = val;
        return;
    }
    function void Change_leftWall(int val) {
        let leftWall = val;
        return;
    }
    function void Change_rightWall(int val) {
        let rightWall = val;
        return;
    }
}
