function LinkedList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push pointer 0
return
function LinkedList.getFront 0
push argument 0
pop pointer 0
push this 1
return
function LinkedList.size 0
push argument 0
pop pointer 0
push this 0
return
function LinkedList.push 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Element.new 1
pop this 1
push this 1
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push argument 1
call Element.new 1
call Element.setNext 2
pop temp 0
push this 2
call Element.getNext 1
pop this 2
label IF_END0
push this 0
push constant 1
add
pop this 0
push constant 0
return
function LinkedList.getElement 1
push argument 0
pop pointer 0
push argument 1
push this 0
gt
push argument 1
or
push this 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
pop local 0
label WHILE_EXP0
push argument 1
push constant 0
gt
not
if-goto WHILE_END0
push argument 1
push constant 1
sub
pop argument 1
push local 0
call Element.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
call Element.getData 1
return
function LinkedList.pop 2
push argument 0
pop pointer 0
push argument 1
push this 0
gt
push argument 1
or
push this 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
pop local 0
push constant 0
pop local 1
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Element.getNext 1
pop this 1
goto IF_END1
label IF_FALSE1
label WHILE_EXP0
push argument 1
push constant 0
gt
not
if-goto WHILE_END0
push local 0
pop local 1
push argument 1
push constant 1
sub
pop argument 1
push local 0
call Element.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_END1
push local 0
call Element.getNext 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
pop this 2
label IF_FALSE2
push local 0
call Element.dispose 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push constant 0
return
function LinkedList.dispose 2
push argument 0
pop pointer 0
push this 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Element.getNext 1
pop local 1
push local 0
call Element.dispose 1
pop temp 0
push local 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
